/*
Существует несколько самолетов, обладающих следующими характеристиками:
1. Boeing 001 – пролетает расстояние, равное 8000 км, за 10 часов;
2. Ил 90 – пролетает расстояние, равное 5400 км, за 9 часов;
3. Ту-153 – пролетает расстояние, равное 14000 км, за 15 часов.
 
Требуется:
1. В классе Task создать перечисление Planes, в котором указать названия самолетов (BOEING, IL90, TU153) и реализовать следующие требования:
	a. создать поля, отвечающие за пройденное расстояние и время пути (целочисленные поля distance и time);
	b. создать публичный метод speed, не принимающий на вход ничего и возвращающий целочисленное значение скорости самолета (distance/time);
	c. создать конструктор, в котором будут инициализироваться сначала расстояние, пройденное самолетом, а затем его время в пути.
2. В этом же классе создать метод int maxSpeed(), в котором сравнить скорости всех самолетов и вернуть наибольшую из них.

Привести исходный код класса, содержащего в себе перечисление и метод maxSpeed(), выводящий наибольшую скорость.
*/

public class Task {

	enum Planes {
		BOEING(8000, 10),
		IL90(5400, 9),
		TU153(14000, 15); //заводим самолёты

		public int speed() {
			return (distance/time); //считаем скорость
		}

		public final int distance;
		public final int time; //объявляем константы

		Planes(int dist, int t) { //наш конструктор
			distance = dist;
			time = t;
		}
	}

	public int maxSpeed() {
		if (Planes.BOEING.speed()>Planes.IL90.speed()) { //долго и упорно сравниваем скорости
			if (Planes.BOEING.speed()>Planes.TU153.speed()) {
				return Planes.BOEING.speed(); //и выводим самую большую
			} else {
				return Planes.TU153.speed(); //(вот эту)
			}
		} else {
			if (Planes.IL90.speed()>Planes.TU153.speed()) {
				return Planes.IL90.speed(); //или эту
			} else {
				return Planes.TU153.speed(); //а может, эту
			}
		}
	}
}